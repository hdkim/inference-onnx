# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: inference.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='inference.proto',
  package='inference',
  syntax='proto3',
  serialized_options=_b('\n\032io.grpc.examples.inferenceB\016InferenceProtoP\001\242\002\003INF'),
  serialized_pb=_b('\n\x0finference.proto\x12\tinference\" \n\x10InferenceRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\"$\n\x11InferenceResponse\x12\x0f\n\x07message\x18\x01 \x01(\t2V\n\nInferencer\x12H\n\tInference\x12\x1b.inference.InferenceRequest\x1a\x1c.inference.InferenceResponse\"\x00\x42\x34\n\x1aio.grpc.examples.inferenceB\x0eInferenceProtoP\x01\xa2\x02\x03INFb\x06proto3')
)




_INFERENCEREQUEST = _descriptor.Descriptor(
  name='InferenceRequest',
  full_name='inference.InferenceRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='inference.InferenceRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=30,
  serialized_end=62,
)


_INFERENCERESPONSE = _descriptor.Descriptor(
  name='InferenceResponse',
  full_name='inference.InferenceResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='inference.InferenceResponse.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=64,
  serialized_end=100,
)

DESCRIPTOR.message_types_by_name['InferenceRequest'] = _INFERENCEREQUEST
DESCRIPTOR.message_types_by_name['InferenceResponse'] = _INFERENCERESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

InferenceRequest = _reflection.GeneratedProtocolMessageType('InferenceRequest', (_message.Message,), {
  'DESCRIPTOR' : _INFERENCEREQUEST,
  '__module__' : 'inference_pb2'
  # @@protoc_insertion_point(class_scope:inference.InferenceRequest)
  })
_sym_db.RegisterMessage(InferenceRequest)

InferenceResponse = _reflection.GeneratedProtocolMessageType('InferenceResponse', (_message.Message,), {
  'DESCRIPTOR' : _INFERENCERESPONSE,
  '__module__' : 'inference_pb2'
  # @@protoc_insertion_point(class_scope:inference.InferenceResponse)
  })
_sym_db.RegisterMessage(InferenceResponse)


DESCRIPTOR._options = None

_INFERENCER = _descriptor.ServiceDescriptor(
  name='Inferencer',
  full_name='inference.Inferencer',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=102,
  serialized_end=188,
  methods=[
  _descriptor.MethodDescriptor(
    name='Inference',
    full_name='inference.Inferencer.Inference',
    index=0,
    containing_service=None,
    input_type=_INFERENCEREQUEST,
    output_type=_INFERENCERESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_INFERENCER)

DESCRIPTOR.services_by_name['Inferencer'] = _INFERENCER

# @@protoc_insertion_point(module_scope)
